name: Auto Commit

on:
  schedule:
    # This workflow runs at 00:00 (UTC) every day, except for Tuesdays and Fridays.
    - cron: "0 0 * * 0,1,3,4,6"
  workflow_dispatch:
    inputs:
      num_commits:
        description: "Number of commits (default: random number between 1-30)"
        default: ""
      repository:
        description: "Repo to check out (default: Parixshit/Green)"
        default: "Parixshit/Green"
      branch:
        description: "Branch to push changes to (default: main)"
        default: "main"

env:
  REPOSITORY: ${{ inputs.repository || 'Parixshit/Green' }}
  BRANCH: ${{ inputs.branch || 'main' }}

jobs:
  auto_commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check Repository and Branch
        run: |
          set -e
          if ! git ls-remote "${{ github.server_url }}/${{ env.REPOSITORY }}" &> /dev/null; then
            echo "Repository '${{ env.REPOSITORY }}' not found"
            exit 1
          fi

          if ! git ls-remote "${{ github.server_url }}/${{ env.REPOSITORY }}" | grep -q "refs/heads/${{ env.BRANCH }}"; then
            echo "Branch '${{ env.BRANCH }}' does not exist in the '${{ env.REPOSITORY }}' repository"
            exit 1
          fi

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPOSITORY }}
          token: ${{ secrets.PAT }}
          ref: ${{ env.BRANCH }}

      - name: Configure Git
        run: |
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"

      - name: Generate Commits
        run: |
          emojis=("🎉" "🎊" "🔥" "⚡️" "🩺" "👽️" "🧪" "🐛" "⚗️" "🚀" "🏗️")
          total_commits=${{ inputs.num_commits }}
          if [ -z "$total_commits" ]; then
            total_commits=$(shuf -i 1-30 -n 1)
          fi
          echo "Generating $total_commits commits..."
          for commit_number in $(seq $total_commits); do
            if [ $total_commits -gt 30 ]; then
              commit_date=$(date -d "$(shuf -i 1-365 -n 1) days ago")
            else
              commit_date=$(date)
            fi
            emoji_index=$(( ($commit_number - 1) % ${#emojis[@]} ))
            commit_message="feat: ${emojis[emoji_index]} auto commit"
            sed -i "1s|.*|**${{ github.actor }} Committed on: $commit_date** <!-- $(uuidgen) -->|" README.md
            git add README.md
            git commit --date="$commit_date" -m "$commit_message"
          done

      - name: Push Changes
        run: git push -u origin ${{ github.head_ref }}
